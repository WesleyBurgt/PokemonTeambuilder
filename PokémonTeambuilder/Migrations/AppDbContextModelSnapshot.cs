// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokémonTeambuilder.DbContext;

#nullable disable

namespace PokémonTeambuilder.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PokémonTeambuilder.core.Classes.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BasePokemonId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Slot")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BasePokemonId");

                    b.ToTable("Ability");
                });

            modelBuilder.Entity("PokémonTeambuilder.core.Classes.BasePokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BaseStatsId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sprite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BaseStatsId");

                    b.ToTable("BasePokemons");

                    b.HasDiscriminator().HasValue("BasePokemon");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("PokémonTeambuilder.core.Classes.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("PokémonTeambuilder.core.Classes.Move", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Accuracy")
                        .HasColumnType("int");

                    b.Property<int?>("BasePokemonId")
                        .HasColumnType("int");

                    b.Property<int>("BasePower")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int>("TypingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BasePokemonId");

                    b.HasIndex("PokemonId");

                    b.HasIndex("TypingId");

                    b.ToTable("Move");
                });

            modelBuilder.Entity("PokémonTeambuilder.core.Classes.Nature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Down")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Up")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Natures");
                });

            modelBuilder.Entity("PokémonTeambuilder.core.Classes.Stats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<int>("Hp")
                        .HasColumnType("int");

                    b.Property<int>("SpecialAttack")
                        .HasColumnType("int");

                    b.Property<int>("SpecialDefense")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("PokémonTeambuilder.core.Classes.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("PokémonTeambuilder.core.Classes.Typing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BasePokemonId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BasePokemonId");

                    b.ToTable("Typing");
                });

            modelBuilder.Entity("PokémonTeambuilder.core.Classes.Pokemon", b =>
                {
                    b.HasBaseType("PokémonTeambuilder.core.Classes.BasePokemon");

                    b.Property<int>("AbilityId")
                        .HasColumnType("int");

                    b.Property<int>("EVsId")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IVsId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("NatureId")
                        .HasColumnType("int");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonalId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasIndex("AbilityId");

                    b.HasIndex("EVsId");

                    b.HasIndex("IVsId");

                    b.HasIndex("ItemId");

                    b.HasIndex("NatureId");

                    b.HasIndex("TeamId");

                    b.HasDiscriminator().HasValue("Pokemon");
                });

            modelBuilder.Entity("PokémonTeambuilder.core.Classes.Ability", b =>
                {
                    b.HasOne("PokémonTeambuilder.core.Classes.BasePokemon", null)
                        .WithMany("Abilities")
                        .HasForeignKey("BasePokemonId");
                });

            modelBuilder.Entity("PokémonTeambuilder.core.Classes.BasePokemon", b =>
                {
                    b.HasOne("PokémonTeambuilder.core.Classes.Stats", "BaseStats")
                        .WithMany()
                        .HasForeignKey("BaseStatsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BaseStats");
                });

            modelBuilder.Entity("PokémonTeambuilder.core.Classes.Move", b =>
                {
                    b.HasOne("PokémonTeambuilder.core.Classes.BasePokemon", null)
                        .WithMany("Moves")
                        .HasForeignKey("BasePokemonId");

                    b.HasOne("PokémonTeambuilder.core.Classes.Pokemon", null)
                        .WithMany("SelectedMoves")
                        .HasForeignKey("PokemonId");

                    b.HasOne("PokémonTeambuilder.core.Classes.Typing", "Typing")
                        .WithMany()
                        .HasForeignKey("TypingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Typing");
                });

            modelBuilder.Entity("PokémonTeambuilder.core.Classes.Typing", b =>
                {
                    b.HasOne("PokémonTeambuilder.core.Classes.BasePokemon", null)
                        .WithMany("Typings")
                        .HasForeignKey("BasePokemonId");
                });

            modelBuilder.Entity("PokémonTeambuilder.core.Classes.Pokemon", b =>
                {
                    b.HasOne("PokémonTeambuilder.core.Classes.Ability", "Ability")
                        .WithMany()
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokémonTeambuilder.core.Classes.Stats", "EVs")
                        .WithMany()
                        .HasForeignKey("EVsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PokémonTeambuilder.core.Classes.Stats", "IVs")
                        .WithMany()
                        .HasForeignKey("IVsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PokémonTeambuilder.core.Classes.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokémonTeambuilder.core.Classes.Nature", "Nature")
                        .WithMany()
                        .HasForeignKey("NatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokémonTeambuilder.core.Classes.Team", null)
                        .WithMany("Pokemons")
                        .HasForeignKey("TeamId");

                    b.Navigation("Ability");

                    b.Navigation("EVs");

                    b.Navigation("IVs");

                    b.Navigation("Item");

                    b.Navigation("Nature");
                });

            modelBuilder.Entity("PokémonTeambuilder.core.Classes.BasePokemon", b =>
                {
                    b.Navigation("Abilities");

                    b.Navigation("Moves");

                    b.Navigation("Typings");
                });

            modelBuilder.Entity("PokémonTeambuilder.core.Classes.Team", b =>
                {
                    b.Navigation("Pokemons");
                });

            modelBuilder.Entity("PokémonTeambuilder.core.Classes.Pokemon", b =>
                {
                    b.Navigation("SelectedMoves");
                });
#pragma warning restore 612, 618
        }
    }
}
